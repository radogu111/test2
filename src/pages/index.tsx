import { Carousel } from "@/components/Carousel"
import { LinkButton } from "@/components/LinkButton"
import { Movie } from "@/interface/interface"
import { fetcher } from "@/utils/fetcher"
import { getImageUrl, makeStar } from "@/utils/utils"
import { RiStarFill, RiStarHalfFill } from "react-icons/ri"
import Head from "next/head"
import Image from "next/image"
import { nanoid } from "nanoid"

interface Props {
    data: {
        results: Movie[]
    }
}

export async function getServerSideProps() {
    const data = await fetcher("/trending/all/day", "&language=vi&page=1")
    return {
        props: {
            data
        }
    }
}

export default function Home({ data }: Props) {
    const trending = data.results
        .filter((movie) => movie.backdrop_path)
        .sort((a, b) => (a.popularity > b.popularity ? -1 : 1))
    return (
        <>
            <Head>
                <title>Movie App</title>
                <meta
                    name="description"
                    content="Generated by create next app"
                />
                <meta
                    name="viewport"
                    content="width=device-width, initial-scale=1"
                />
                <link
                    rel="icon"
                    href="/favicon.ico"
                />
            </Head>
            <div>
                <div>
                    <Carousel>
                        {trending.map((movie) => (
                            <div
                                key={movie.id}
                                className="flex-shrink-0 flex-grow-0 basis-full min-w-0 relative"
                            >
                                <Image
                                    src={getImageUrl(
                                        "/original",
                                        movie.backdrop_path
                                    )}
                                    alt={
                                        movie.title || movie.name || "Untitled"
                                    }
                                    height={720}
                                    width={1280}
                                    className="w-full md:block hidden"
                                />
                                <Image
                                    src={getImageUrl(
                                        "/original",
                                        movie.poster_path
                                    )}
                                    alt={
                                        movie.title || movie.name || "Untitled"
                                    }
                                    height={750}
                                    width={500}
                                    className="w-full md:hidden"
                                />
                                <div className="absolute w-full h-1/3 top-0 left-0 bg-gradient-to-b from-black" />
                                <div className="absolute w-full h-2/3 bottom-0 left-0 bg-gradient-to-t from-black" />
                                <div className="absolute top-1/2 left-1/2 -translate-x-1/2 lg:-translate-y-1/2 md:left-1/2 md:top-1/2 md:-translate-x-full md:w-[40%] w-[80%]">
                                    <div className="flex flex-col gap-1 md:flex-col-reverse">
                                        <h1 className="font-bold text-3xl lg:text-4xl drop-shadow-[2px_2px_2px_rgba(0,0,0,0.5)]">
                                            {movie.title ||
                                                movie.name ||
                                                "Untitled"}
                                        </h1>
                                        <span className="flex">
                                            {makeStar(
                                                movie.vote_average,
                                                []
                                            ).map((star) =>
                                                star === "full" ? (
                                                    <RiStarFill
                                                        key={nanoid()}
                                                    />
                                                ) : (
                                                    <RiStarHalfFill
                                                        key={nanoid()}
                                                    />
                                                )
                                            )}
                                        </span>
                                    </div>
                                    <p className="text-sm font-semibold hidden md:block my-3">
                                        {movie.overview}
                                    </p>
                                    <LinkButton
                                        href={`/${movie.media_type}/${movie.id}`}
                                        className="px-3 py-2 border-[1px] border-white rounded-lg mt-3 inline-block"
                                    >
                                        Xem
                                    </LinkButton>
                                </div>
                            </div>
                        ))}
                    </Carousel>
                </div>
            </div>
        </>
    )
}
